openapi: "3.0.0"
info:
  version: 2.0.1
  title: Cloud Failover (CF) Extension
  description: F5 Cloud Failover (CFE) is an iControl LX Extension delivered as a TMOS-independent RPM file. Installing the CFE Extension on BIG-IP enables you to declaratively configure BIG-IP devices for automatic failover in cloud environments by POSTing a single JSON declaration to CFâ€™s declarative REST API endpoint.
  license:
    name: Apache License 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://192.0.2.1:443/mgmt/shared/cloud-failover
paths:
  /info:
    get:
      operationId: GetInfo
      summary: List extension information
      tags:
        - Information
      responses:
        "200":
          description: Information Response
          content:
            "application/json; charset=UTF-8":
              schema:
                $ref: "#/components/schemas/InformationResponse"
              example:
                version: "2.0.1"
                release: "1"
                schemaCurrent: "2.0.1"
                schemaMinimum: "1.0.0"
        "400":
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /declare:
    get:
      operationId: GetConfig
      summary: List configuration
      tags:
        - Configuration
      responses:
        "200":
          description: Configuration Response
          content:
            "application/json; charset=UTF-8":
              schema:
                $ref: "#/components/schemas/ConfigurationResponse"
              examples:
                "TagDiscovery":
                  $ref: "#/components/examples/TagResponse"
                "StaticDiscovery":
                  $ref: "#/components/examples/StaticResponse"
        "400":
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: PostConfig
      summary: Update configuration
      tags:
        - Configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Configuration"
            examples:
              "TagDiscovery":
                $ref: "#/components/examples/TagDiscovery"
              "AWSAcrossAvailabilityZones":
                $ref: "#/components/examples/AwsAcrossAz"
              "AWSSameAvailabilityZone":
                $ref: "#/components/examples/AwsSameAz"
              "Azure":
                $ref: "#/components/examples/Azure"
              "GoogleCloud":
                $ref: "#/components/examples/Gcp"
      responses:
        "200":
          description: Configuration response
          content:
            "application/json; charset=UTF-8":
              schema:
                $ref: "#/components/schemas/ConfigurationResponse"
              examples:
                "TagDiscovery":
                  $ref: "#/components/examples/TagResponse"
                "StaticDiscovery":
                  $ref: "#/components/examples/StaticResponse"
        "400":
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /trigger:
    post:
      operationId: PostTrigger
      description: "Primarily supported action is dry-run, which returns objects and resources that are updated if failover is triggered. WARNING: Do not use the execute action, it is for use by BIG-IP only."
      summary: Trigger failover
      tags:
        - Trigger
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
            examples:
              dry-run:
                value:
                  action: dry-run
              execute:
                value:
                  action: execute

      responses:
        "200":
          description: Configuration response
          content:
            "application/json; charset=UTF-8":
              schema:
                oneOf:
                  - $ref: "#/components/schemas/DryRunResponse"
                  - $ref: "#/components/schemas/TaskStateResponse"

        "500":
          description: Failover task failed
          content:
            "application/json; charset=UTF-8":
              schema:
                $ref: "#/components/schemas/TaskStateResponse"
              example:
                taskState: FAILED
                message: Failover failed because of x
                timestamp: 2019-09-25T22:12:52.137Z
                instance: failover1.local
                failoverOperations:
                  routes: {}
                  addresses: {}
                code: "500"
        "400":
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                  taskState: FAILED
                  message: Failover Unexpected Error
                  code: 500
    get:
      operationId: GetTrigger
      summary: Show triggered failover task status
      tags:
        - Trigger
      responses:
        "202":
          description: Failover task is running
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TaskStateResponse"
              example:
                  taskState: RUNNING
                  message: Failover running
                  timestamp: 2019-09-25T22:12:52.137Z
                  instance: failover1.local
                  failoverOperations:
                    routes: {}
                    addresses: {}
                  code: "202"
        "200":
          description: Successful failover task
          content:
            "application/json; charset=UTF-8":
              schema:
                $ref: "#/components/schemas/TaskStateResponse"
              example:
                  taskState: SUCCEEDED
                  message: Failover Completed Successfully
                  timestamp: 2019-09-25T23:44:44.381Z
                  instance: failover0.local
                  failoverOperations:
                    routes: {}
                    addresses: {}
                  code: "200"
        "400":
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Failed failover task
          content:
            "application/json; charset=UTF-8":
              schema:
                $ref: "#/components/schemas/TaskStateResponse"
              example:
                  taskState: FAILED
                  message: Failover failed because of x
                  timestamp: 2019-09-25T22:12:52.137Z
                  instance: failover1.local
                  failoverOperations:
                    routes: {}
                    addresses: {}
                  code: "500"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                  taskState: FAILED
                  message: Failover Unexpected Error
                  code: 500
  /reset:
    post:
      operationId: PostReset
      summary: Reset failover state file
      tags:
        - Reset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resetStateFile:
                  type: boolean
            example:
              resetStateFile: true
      responses:
        "200":
          description: Reset State Response
          content:
            "application/json; charset=UTF-8":
              schema:
                $ref: "#/components/schemas/ResponseWithMessageString"
        "400":
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /inspect:
    get:
      operationId: GetInspect
      summary: List associated cloud objects
      tags:
        - Information
      responses:
        "200":
          description: Inspect Response
          content:
            "application/json; charset=UTF-8":
              schema:
                $ref: "#/components/schemas/InspectResponse"
              example:
                instance: "123"
                addresses:
                  - privateIpAddress: "1.1.1.1"
                    publicIpAddress: "40.40.40.40"
                    networkInterfaceId: "000AAA"
                routes:
                  - routeTableId: "123"
                    routeTableName: "ABC"
                    networkId: "123"
                hostName: "failover1.local"
                deviceStatus: "active"
                trafficGroup:
                  - name: "/Common/traffic-group-1"
        "400":
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  examples:
    TagDiscovery:
      value:
        class: Cloud_Failover
        schemaVersion: "1.0.0"
        environment: aws
        externalStorage:
          scopingTags:
            f5_cloud_failover_label: myDeployment
        failoverAddresses:
          enabled: "true"
          scopingTags:
            f5_cloud_failover_label: myDeployment
        failoverRoutes:
          enabled: "true"
          scopingTags:
            f5_cloud_failover_label: myDeployment
          scopingAddressRanges:
            - range: "0.0.0.0/0"
          defaultNextHopAddresses:
            discoveryType: routeTag
        controls:
          class: Controls
          logLevel: silly
    AwsAcrossAz:
      value:
        class: Cloud_Failover
        schemaVersion: "1.0.0"
        environment: aws
        externalStorage:
          scopingName: myDeployment
        failoverAddresses:
          enabled: "true"
          scopingTags:
            f5_cloud_failover_label: myDeployment
          addressGroupDefinitions:
            - type: elasticIpAddress
              scopingAddress: "1.1.1.1"
              vipAddresses:
                - "10.0.12.101"
                - "10.0.22.101"
            - type: elasticIpAddress
              scopingAddress: "2.2.2.2"
              vipAddresses:
                - "10.0.12.102"
                - "10.0.22.102"
        failoverRoutes:
          enabled: "true"
          routeGroupDefinitions:
            - scopingName: myDeployment-routeTable
              scopingAddressRanges:
                - range: "0.0.0.0/0"
              defaultNextHopAddresses:
                discoveryType: static
                items:
                - "10.0.13.11"
                - "10.0.23.11"
        controls:
          class: Controls
          logLevel: info
    AwsSameAz:
      value:
        class: Cloud_Failover
        schemaVersion: "1.0.0"
        environment: aws
        externalStorage:
          scopingName: myDeployment
        failoverAddresses:
          enabled: "true"
          scopingTags:
            f5_cloud_failover_label: myDeployment
          addressGroupDefinitions:
            - type: networkInterfaceAddress
              scopingAddress: "10.0.12.101"
            - type: networkInterfaceAddress
              scopingAddress: "10.0.12.102"
        failoverRoutes:
          enabled: "true"
          routeGroupDefinitions:
            - scopingName: myDeployment-routeTable
              scopingAddressRanges:
                - range: "0.0.0.0/0"
              defaultNextHopAddresses:
                discoveryType: static
                items:
                - "10.0.13.11"
                - "10.0.23.11"
        controls:
          class: Controls
          logLevel: info
    Azure:
      value:
        class: Cloud_Failover
        schemaVersion: "1.0.0"
        environment: azure
        externalStorage:
          scopingName: myDeployment
        failoverAddresses:
          enabled: "true"
          scopingTags:
            f5_cloud_failover_label: myDeployment
          addressGroupDefinitions:
            - type: networkInterfaceAddress
              scopingAddress: "10.0.12.101"
            - type: networkInterfaceAddress
              scopingAddress: "10.0.12.102"
        failoverRoutes:
          enabled: "true"
          routeGroupDefinitions:
            - scopingName: myDeployment-routeTable
              scopingAddressRanges:
                - range: "0.0.0.0/0"
              defaultNextHopAddresses:
                discoveryType: static
                items:
                  - "10.0.13.11"
                  - "10.0.13.12"
        controls:
          class: Controls
          logLevel: info
    Gcp:
      value:
        class: Cloud_Failover
        schemaVersion: "1.0.0"
        environment: gcp
        externalStorage:
          scopingName: myDeployment
        failoverAddresses:
          enabled: "true"
          scopingTags:
            f5_cloud_failover_label: myDeployment
          addressGroupDefinitions:
            - type: forwardingRule
              scopingName: myDeployment-forwarding-rule
              targetInstances:
                - ti-cluster-1-a
                - ti-cluster-1-b
            - type: aliasAddress
              scopingAddress: "10.0.12.101/28"
        failoverRoutes:
          enabled: "true"
          routeGroupDefinitions:
            - scopingName: myDeployment-routeTable
              scopingAddressRanges:
                  - range: "0.0.0.0/0"
              defaultNextHopAddresses:
                discoveryType: static
                items:
                  - "10.0.13.11"
                  - "10.0.13.12"
        controls:
          class: Controls
          logLevel: info
    TagResponse:
      value:
        message: success
        declaration: 
          class: Cloud_Failover
          schemaVersion: "1.0.0"
          environment: aws
          externalStorage:
            scopingTags:
              f5_cloud_failover_label: myDeployment
          failoverAddresses:
            enabled: "true"
            scopingTags:
              f5_cloud_failover_label: myDeployment
          failoverRoutes:
            enabled: "true"
            scopingTags:
              f5_cloud_failover_label: myDeployment
            scopingAddressRanges:
              - range: "192.0.2.0/24"
            defaultNextHopAddresses:
              discoveryType: routeTag
          controls:
            class: Controls
            logLevel: silly
    StaticResponse:
      value:
        message: success
        declaration: 
          class: Cloud_Failover
          schemaVersion: "1.0.0"
          environment: aws
          externalStorage:
            scopingName: myDeployment
          failoverAddresses:
            enabled: "true"
            scopingTags:
              f5_cloud_failover_label: myDeployment
            addressGroupDefinitions:
              - type: elasticIpAddress
                scopingAddress: "1.1.1.1"
                vipAddresses:
                  - "10.0.12.101"
                  - "10.0.22.101"
              - type: elasticIpAddress
                scopingAddress: "2.2.2.2"
                vipAddresses:
                  - "10.0.12.102"
                  - "10.0.22.102"
          failoverRoutes:
            enabled: "true"
            routeGroupDefinitions:
              - scopingName: rtb-11111111111111111
                scopingAddressRanges:
                  - range: "0.0.0.0/0"
                defaultNextHopAddresses:
                  discoveryType: static
                  items:
                  - "10.0.13.11"
                  - "10.0.23.11"
          controls:
            class: Controls
            logLevel: info
  schemas:
    Configuration:
      type: object
      properties:
        class:
          type: string
          default: "Cloud_Failover"
        environment:
          type: string
          enum:
            - azure
            - aws
            - gcp
        schemaVersion:
          type: string
        externalStorage:
          type: object
          properties:
            scopingTags:
              type: object
              additionalProperties: true
            scopingName:
              type: string
          oneOf:
            - required: [scopingTags]
            - required: [scopingName]
        failoverAddresses:
          type: object
          properties:
            scopingTags:
              type: object
              additionalProperties: true
            addressGroupDefinitions:
              type: array
              items:
                properties:
                  type:
                    type: string
                    enum:
                      - aliasAddress
                      - elasticIpAddress
                      - forwardingRule
                      - networkInterfaceAddress
                  scopingAddress:
                    type: string
                  vipAddresses:
                    type: array
                    items:
                      type: string
                      title: "Virtual Server IP address"
                  targetInstances:
                    type: array
                    items:
                      type: string
                      title: "Target instance name"
        failoverRoutes:
          type: object
          properties:
            enabled:
              type: string
            routeGroupDefinitions:
              type: array
              items:
                properties:
                  scopingTags:
                    type: object
                    additionalProperties: true
                  scopingAddressRanges:
                    type: array
                    items:
                      type: object
                      properties:
                        range:
                          type: string
                          description: "Route prefix to match when updating next hop address"
                  defaultNextHopAddresses:
                    type: object
                    description: "Next hop IP addresses"
                    nullable: true
                    properties:
                      discoveryType:
                        type: string
                        enum:
                          - routeTag
                          - static
                      items:
                        type: array
                        items:
                          type: string
                          description: "BIG-IP self IP address"
        controls:
          type: object
          properties:
            class:
              type: string
              enum:
                - Controls
            logLevel:
              type: string
              enum:
                - info
                - debug
                - verbose
                - warning
                - error
                - silly
    InformationResponse:
      type: object
      properties:
        version:
          type: string
        release:
          type: string
        schemaCurrent:
          type: string
        schemaMinimum:
          type: string
    InspectResponse:
      type: object
      properties:
        instance:
          type: string
        addresses:
          type: array
        routes:
          type: array
        hostName:
          type: string
        deviceStatus:
          type: string
          enum:
            - active
            - standby
        trafficGroup:
          type: array
          properties:
            name:
              type: string
    ConfigurationResponse:
      type: object
      properties:
        message:
          type: string
        declaration:
          $ref: "#/components/schemas/Configuration"
    TaskStateResponse:
      type: object
      properties:
        taskState:
          type: string
          enum:
            - "RUNNING"
            - "SUCCEEDED"
            - "FAILED"
        timestamp:
          type: string
        instance:
          type: string
        failoverOperations:
          type: object
          properties:
            routes:
              type: object
            addresses:
              type: object
        code:
          type: string
    DryRunResponse:
      type: object
      properties:
        addresses:
          type: object
        routes:
          type: object
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
    ResponseWithMessageString:
      type: object
      properties:
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []
