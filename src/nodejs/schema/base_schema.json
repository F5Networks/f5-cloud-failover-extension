{
    "$id": "base_schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Cloud Failover",
    "description": "Top level schema for enabling cloud failover for BIG-IP",
    "type": "object",
    "definitions": {
        "enabled": {
            "type": "boolean"
        },
        "scopingName": {
            "type": "string"
        },
        "scopingAddress": {
            "type": "string"
        },
        "scopingTags": {
            "type": "object",
            "additionalProperties": true
        },
        "type": {
            "$comment": "Determine the type of IP failover objects to perform failover",
            "type": "string"
        },
        "nextHopAddresses": {
            "$comment": "Determine default next hop addresses: Supports multiple discovery types, should default to route tag for backwards compatibility.",
            "type": "object",
            "properties": {
                "discoveryType": {
                    "type": "string",
                    "enum": [
                        "static",
                        "routeTag"
                    ],
                    "default": "routeTag"
                },
                "items": {
                    "$comment": "Certain discovery types will require an array of items, those can be provided using this property.",
                    "type": "array",
                    "maxItems": 10
                }
            },
            "required": [
                "discoveryType"
            ]
        },
        "scopingAddressRanges": {
            "$comment": "This should be an array with each item as an object to allow support for multiple properties per item in the future.",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "range": {
                        "type": "string",
                        "format": "ipAddressWithCidr"
                    },
                    "nextHopAddresses": { "$ref": "#/definitions/nextHopAddresses" }
                },
                "required": [
                    "range"
                ]
            }
        },
        "resourceLocations": {
            "$comment": "Resource location is a standard definition describing environment specific location information (Azure Subscription, AWS account, GCP project)",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "string"
                    }
                },
                "required": []
            }
        },
        "networkInterfaces": {
            "$comment": "An array of network interfaces used in failover",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "vipAddresses": {
            "$comment": "An array of BIG-IP virtual IP addresses for failover",
            "type": "array",
            "items": {
                "type": "string"
            },
            "maxItems": 2,
            "minItems": 2
        },
        "targetInstances": {
            "$comment": "An array of BIG-IP target instances for failover",
            "type": "array",
            "items": {
                "type": "string"
            }
        }
    },
    "required": [
        "class",
        "environment"
    ],
    "properties": {
        "class": {
            "title": "Class",
            "description": "Cloud failover top level class",
            "type": "string",
            "enum": [
                "Cloud_Failover"
            ]
        },
        "schemaVersion": {
            "title": "Schema version",
            "description": "Version of ADC Declaration schema this declaration uses",
            "type": "string",
            "$comment": "IMPORTANT: In enum array, please put current schema version first, oldest-supported version last.  Keep enum array sorted most-recent-first.",
            "enum": [
                "1.10.0",
                "1.9.0",
                "1.8.0",
                "1.7.1",
                "1.7.0",
                "1.6.1",
                "1.6.0",
                "1.5.0",
                "1.4.0",
                "1.3.0",
                "1.2.0",
                "1.1.0",
                "1.0.0",
                "0.9.1"
            ],
            "default": "1.10.0"
        },
        "$schema": {
            "title": "Schema",
            "description": "URL of schema against which to validate. Used by validation in your local environment only (via Visual Studio Code, for example)",
            "type": "string"
        },
        "environment": {
            "title": "Environment",
            "description": "Cloud provider environment.",
            "type": "string",
            "enum": [
                "aws",
                "azure",
                "gcp"
            ]
        },
        "customEnvironment": {
            "title": "Custom Environment",
            "description": "Custom environment settings for Azure cloud instance.",
            "type": "object"
        },
        "failoverAddresses": {
            "title": "Failover Addresses",
            "description": "Addresses this deployment will manage.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "scopingTags": {
                    "type": "object",
                    "additionalProperties": true
                },
                "requireScopingTags": {
                    "type": "boolean",
                    "default": false
                },
                "addressGroupDefinitions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": { "#ref": "#/definitions/type"},
                            "scopingName": { "#ref": "#/definitions/scopingName" },
                            "scopingAddress": { "#ref": "#/definitions/scopingAddress"},
                            "targetInstances": { "#ref": "#/definitions/targetInstances"},
                            "vipAddresses": {"#ref": "#/definitions/vipAddresses"}
                        },
                        "required": ["type"],
                        "anyOf": [
                            {
                                "properties": {"type": { "const":  "forwardingRule"}},
                                "required": ["scopingName", "targetInstances"]
                            },
                            {
                                "properties": {"type": { "const":  "aliasAddress"}},
                                "required": ["scopingAddress"]
                            },
                            {
                                "properties": {"type": { "const":  "networkInterfaceAddress"}},
                                "required": ["scopingAddress"]
                            },
                            {
                                "properties": {"type": { "const":  "elasticIpAddress"}},
                                "required": ["scopingAddress", "vipAddresses"]
                            },
                            {
                                "properties": {"type": { "const":  "publicIpAddress"}},
                                "required": ["scopingName", "vipAddresses"]
                            }
                        ]
                    }
                }
            },
            "anyOf": [
                { "required": ["scopingTags"] },
                { "required": ["addressGroupDefinitions"] }
            ]
        },
        "failoverRoutes": {
            "title": "Failover Routes",
            "description": "Route(s) this deployment will manage.",
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "enabled": { "$ref": "#/definitions/enabled" },
                        "defaultResourceLocations": { "$ref": "#/definitions/resourceLocations" }
                    }
                },
                {
                    "if": { "required": [ "routeGroupDefinitions" ] },
                    "then": {
                        "type": "object",
                        "properties": {
                            "routeGroupDefinitions": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "scopingName": { "$ref": "#/definitions/scopingName" },
                                        "scopingTags": { "$ref": "#/definitions/scopingTags" },
                                        "scopingAddressRanges": { "$ref": "#/definitions/scopingAddressRanges" },
                                        "defaultNextHopAddresses": { "$ref": "#/definitions/nextHopAddresses" }
                                    },
                                    "additionalProperties": false
                                }
                             }
                        },
                        "required": [
                            "routeGroupDefinitions"
                        ]
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "defaultNextHopAddresses": { "$ref": "#/definitions/nextHopAddresses" },
                            "scopingTags": { "$ref": "#/definitions/scopingTags" },
                            "scopingAddressRanges": { "$ref": "#/definitions/scopingAddressRanges" }
                        },
                        "required": [
                            "scopingTags",
                            "scopingAddressRanges"
                        ]
                    }
                }
            ]
        },
        "retryFailover": {
            "title": "Retry Failover",
            "description": "Feature to trigger failover periodically",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "integer"
                }
            }
        },
        "externalStorage": {
            "title": "External Storage",
            "description": "External storage this deployment will manage.",
            "type": "object",
            "oneOf": [
                {
                    "properties": {
                        "scopingTags": { "$ref": "#/definitions/scopingTags" }
                    },
                    "required": ["scopingTags"]
                },
                {
                    "properties": {
                        "scopingName": { "$ref": "#/definitions/scopingName" }
                    },
                    "required": ["scopingName"]
                }
            ]
        },
        "trustedCertBundle": {
            "title": "Trusted Cert Bundle",
            "description": "File location of a custom certificate bundle to use for cloud API calls.",
            "type": "string"
        },
        "controls": {
            "title": "Controls",
            "description": "Controls class used to set system controls, such as logging level.",
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "logLevel": {
                    "description": "Log Level of the system.",
                    "type": "string",
                    "enum": [
                        "error",
                        "warning",
                        "info",
                        "debug",
                        "verbose",
                        "silly"
                    ]
                }
            }
        }
    },
    "allOf": [
        {
            "if": { "properties": { "environment": { "const": "azure" } } },
            "then": {}
        },
        {
            "if": { "properties": { "environment": { "const": "aws" } } },
            "then": {}
        },
        {
            "if": { "properties": { "environment": { "const": "gcp" } } },
            "then": {
                "then": {}
            }
        }
    ],
    "additionalProperties": false
}
